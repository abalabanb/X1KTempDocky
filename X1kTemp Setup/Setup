; ©2013 Alexandre BALABAN (made with GoldED Studio AIX Installation wizard, ©2005 Dietmar Eilert)

; /// identify language
; ------------------------------------------------------------------------------

; normalize language names (OS4 uses "german", OS3 and MorphOS use "deutsch")

(if (= @language "deutsch")

    (set @language "german")
)

(if (= @language "franηais")

    (set @language "french")
)

(if (= @language "greek")

    (set @language "greek")
)

(if (= @language "italiano")

    (set @language "italian")
)


; ///
; /// strings
; ------------------------------------------------------------------------------

; set escape sequence for proprtional font (if supported)

(if (= @installer-version 0)

    (set #string_esc "")
    (set #string_esc "[2p")
)


; english strings

(
    (
        (set #string_installer                "The installer program on your system (%ld.%ld) is too old!\n\nThis script needs installer version 43 or better. You can find a suitable version on your OS CD or in the OS3.9 NDK. When upgrading installer, do not leave older versions installed on your system (for example a new version in c: and an older version is sys:tools)!")

        (set #string_path                     "Choose a path for installation:")
        (set #string_path_newdir              "Choose a path for installation. The setup program will create the directory «%s» in the path you specify:")

        (set #string_selectfile               "Select a file:")
        (set #string_selectdirectory          "Select a directory:")

        (set #string_createdirerror           "Can not create directory:\n%s")

        (set #string_runcommanderror          "WARNING: \"%s\" has returned error code %ld!\n\nCommand line:\n%s")

        (set #string_uninstall_yes            "UNINSTALL")
        (set #string_uninstall_no             "Skip")

        (set #string_again                    "TRY AGAIN")
        (set #string_skip                     "Skip")
        (set #string_ignore                   "Ignore")

        (set #string_success                  "Installation complete!\n\nThe software has been installed.")
        (set #string_success_verbose          "Installation complete!\n\nThe software has been installed in:\n\"%s\"")

        (set #string_old                      "The installed version is too old to be upgraded. Please uninstall the old version and repeat this installation.")

        (set #string_welcome                  "Welcome to X1kTemp.docky Setup!\n\nThis program installs X1kTemp Docky %s on your computer.")
        (set #string_welcome_install          "INSTALL")

        (set #string_license                  "LICENSE\nX1kTemp Docky %s ©2013 Alexandre BALABAN, All Rights Reserved.\nTHIS SOFTWARE IS PROTECTED BY INTERNATIONAL AND NATIONAL LAWS. UNAUTHORIZED DISTRIBUTION OR RENTAL OF THIS SOFTWARE OR ONE OF ITS COMPONENTS ARE PROSECUTED TO THE FULLEST EXTENT POSSIBLE.")
        (set #string_license_accept           "I accept the terms of the license agreement")

        (set #studio_installerror             "An error has occured during the installation. The error description can be found in the logfile t:install.logfile (if log file creation has been enabled). The error code is:\n\n%ld\n\nIf the problem persists after repeating the installation, please contact alexandre@balaban.fr.")

        (set #string_os                       "%s is not compatible with the operating system installed on this computer!")
        (set #string_cpu                      "%s is not compatible with the CPU installed in your computer!")

        (set #string_components_install       "Choose the components to be installed\n\n(Page %ld of %ld):")
        (set #string_components_update        "Choose the components to be installed or updated\n\n(Page %ld of %ld):")
        (set #string_components_help          "Choose the components you want to have installed.")

        (set #string_components_software      "Software")
        (set #string_components_manuals       "Manuals")
        (set #string_components_catalogs      "Catalogs")

        (set #string_startup                  "Make required changes to the s:user-startup file of your computer?")

        (set #string_add_docky                "The installer can automatically add the docky into AmiDock.\nHowever it can only install it into the main dock.\n\nDo you want to add the docky into AmiDock?")
    )
)

; French strings

(if (= @language "french")
    (
        (set #string_installer                "Le programme d'installation de votre systθme (%ld.%ld) est trop vieux !\n\nCe script nιcessite installer version 43 ou supιrieure. Vous pouvez trouver une version adaptιe sur le CD de votre OS ou dans le NDK d'OS3.9. Lors de la mise ΰ jour d'Installer, ne laissez pas d'anciennces version sur votre systθme (par exemple une nouvelle version dans C: et une ancienne dans SYS:Tools) !")

        (set #string_path                     "Choisissez un chemin pour l'installation :")
        (set #string_path_newdir              "Choisissez un chemin pour l'installation. Le programme d'installation va crιer le rιpertoire « %s » dans l'emplacement spιcifiι :")

        (set #string_selectfile               "Choisissez un fichier :")
        (set #string_selectdirectory          "Choisissez un rιpertoire :")

        (set #string_createdirerror           "Impossible de crιer le rιpertoire :\n%s")

        (set #string_runcommanderror          "ATTENTION : \"%s\" a renvoyι le code d'erreur %ld!\n\nLigne de commande :\n%s")

        (set #string_uninstall_yes            "DΙSINSTALLER")
        (set #string_uninstall_no             "Sauter")

        (set #string_again                    "RΙESSAYER")
        (set #string_skip                     "Sauter")
        (set #string_ignore                   "Ignorer")

        (set #string_success                  "Installation terminιe !\n\nLe logiciel a ιtι installι.")
        (set #string_success_verbose          "Installation terminιe !\n\nLe logiciel a ιtι installι dans :\n\"%s\"")

        (set #string_old                      "La version installιe est trop ancienne pour κtre mise ΰ jour. Veuillez la dιsinstaller et relancer cette installation.")

        (set #string_welcome                  "Bienvenue dans l'installation de X1kTemp.docky !\n\nCe programme installe X1kTemp Docky %s sur votre ordinateur.")
        (set #string_welcome_install          "INSTALLER")

        (set #string_license                  "LICENCE\nX1kTemp Docky %s ©2013 Alexandre BALABAN, Tous Droits Rιservιs.\nCE LOGICIEL EST PROTEGΙ PAR LES LOIS INTERNATIONALES ET NATIONALES. LA DISTRIBUTION OU LA LOCATION DE CE LOGICIEL OU UN DE SES COMPOSANTS SONT POURSUIVIS DANS TOUTE LA MESURE DU POSSIBLE.")
        (set #string_license_accept           "J'accepte les termes de l'accord de licence")

        (set #studio_installerror             "Une erreur est survenue durant l'installation. La description de l'erreur peut κtre trouvιe dans le fichier journal t:install.logfile (si la crιation de fichier journal a ιtι activιe). Le code d'erreur est :\n\n%ld\n\nSi le problθme persiste aprθs une nouvelle tentative d'installation, veuillez contacter alexandre@balaban.fr.")

        (set #string_os                       "%s n'est pas compatible avec le systθme d'exploitation installι sur votre ordinateur !")
        (set #string_cpu                      "%s n'est pas compatible avec le processeur prιsent dans votre ordinateur !")

        (set #string_components_install       "Choisissez les composants ΰ installer\n\n(Page %ld sur %ld) :")
        (set #string_components_update        "Choisissez les composants ΰ installer ou mettre ΰ jour\n\n(Page %ld sur %ld):")
        (set #string_components_help          "Choisissez les composants ΰ installer.")

        (set #string_components_software      "Logiciel")
        (set #string_components_manuals       "Manuels")
        (set #string_components_catalogs      "Catalogues")

        (set #string_startup                  "Voulez-vous effectuer les changements nιcessaires dans le fichier s:user-startup de votre ordinateur ?")

        (set #string_add_docky                "L'installation peut automatiquement ajouter le docky dans AmiDock.\nCependant il ne peut que l'installer dans la barre principale.\n\nVoulez-vous ajouter le docky dans AmiDock ?")
    )
)

; Greek strings
(if (= @language "greek")
    (
        (set #string_installer                "Το πρόγραμμα εγκατάστασης του συστήματος (%ld.%ld) είναι πολύ παλιό!\n\nΑυτή η εφαρμογή χρειάζεται την έκδοση 43 ή νεότερη. Μπορείτε να βρείτε αυτές τις εκδόσεις στο CD του λειτουργικού συστήματός σας ή στο OS3.9 NDK. Όταν κάνετε εγκατάσταση της νέας εφαρμογής εγκατάστασης, μην αφήσετε εγκαταστημένες παλαιές εκδόσεις στο σύστημά σας (π.χ. μια νέα έκδοση στο C: και μια παλαιότερη στο SYS:Tools)!")

        (set #string_path                     "Επιλέξτε διαδρομή για εγκατάσταση:")
        (set #string_path_newdir              "Επιλέξτε διαδρομή για εγκατάσταση. Η εφαρμογή θα δημιουργήσει τον φάκελο «%s» στην διαδρομή που καθορίσατε:")

        (set #string_selectfile               "Επιλέξτε ένα αρχείο:")
        (set #string_selectdirectory          "Επιλέξτε ένα φάκελο:")

        (set #string_createdirerror           "Αδυναμία δημιουργίας φακέλου:\n%s")

        (set #string_runcommanderror          "ΠΡΟΣΟΧΗ: \"%s\" επέστρεψε κωδικό σφάλματος %ld!\n\nΓραμμή εντολής:\n%s")

        (set #string_uninstall_yes            "ΑΠΕΓΚΑΤΑΣΤΑΣΗ")
        (set #string_uninstall_no             "Παράλειψη")

        (set #string_again                    "ΔΟΚΙΜΑΣΤΕ ΞΑΝΑ")
        (set #string_skip                     "Παράλειψη")
        (set #string_ignore                   "Παράβλεψη")

        (set #string_success                  "Η εγκατάσταση ολοκληρώθηκε!\n\nΗ εφαρμογή έχει εγκατασταθεί.")
        (set #string_success_verbose          "Η εγκατάσταση ολοκληρώθηκε!\n\nΗ εφαρμογή έχει εγκατασταθεί στο:\n\"%s\"")

        (set #string_old                      "Η εγκατεστημένη έκδοση είναι πολύ παλιά για ανανέωση. Παρακαλώ κάντε απεγκατάσταση της παλιάς έκδοσης και επανεκκινήστε την εγκατάσταση.")

        (set #string_welcome                  "Καλωσήρθατε στην εγκατάσταση του X1kTemp.docky!\n\nΑυτή η εφαρμογή θα εγκαταστήσει το X1kTemp Docky %s στον υπολογιστή σας.")
        (set #string_welcome_install          "ΕΓΚΑΤΑΣΤΑΣΗ")

        (set #string_license                  "ΑΔΕΙΑ\nX1kTemp Docky %s ©2013 Alexandre BALABAN, All Rights Reserved.\nΑΥΤΟ ΤΟ ΛΟΓΙΣΜΙΚΟ ΕΙΝΑΙ ΠΡΟΣΤΑΤΕΥΜΕΝΟ ΑΠΟ ΔΙΕΘΝΗ ΚΑΙ ΕΘΝΙΚΟΥΣ ΝΟΜΟΥΣ. ΜΗ ΕΞΟΥΣΙΟΔΟΤΗΜΕΝΗ ΔΙΑΝΟΜΗ Ή ΕΝΟΙΚΙΑΣΗ ΑΥΤΟΥ ΤΟΥ ΛΟΓΙΣΜΙΚΟΥ Η ΜΕΡΟΥΣ ΑΥΤΟΥ ΔΙΩΚΕΤΑΙ ΣΤΟΝ ΜΕΓΙΣΤΟ ΠΙΘΑΝΟ ΒΑΘΜΟ.")
        (set #string_license_accept           "Δέχομαι τους όρους της παραχώρησης αδείας")

        (set #studio_installerror             "Ένα σφάλμα παρουσιάστηκε κατά την εγκατάσταση. Η περιγραφή του σφάλματος μπορεί να βρεθεί στο αρχείο καταγραφής t:install.logfile (αν έχει ενεργοποιηθεί η δημιουργία καταγραφής αρχείου). Ο κωδικός σφάλματος είναι:\n\n%ld\n\nΑν το πρόβλημα παραμένει μετά την επανάληψη της εγκατάστασης, παρακαλώ επικοινωνήστε στο alexandre@balaban.fr.")

        (set #string_os                       "Το %s δεν είναι συμβατό με το λειτουργικό σύστημα που είναι εγκατεστημένο στον υπολογιστή σας!")
        (set #string_cpu                      "Η %s δεν είναι συμβατή με την εγκατεστημένη CPU που είναι εγκατεστημένη στον υπολογιστή σας!")

        (set #string_components_install       "Επιλέξτε τα στοιχεία που θέλετε να εγκαταστήσετε\n\n(Σελίδα %ld από %ld):")
        (set #string_components_update        "Επιλέξτε τα στοιχεία που θέλετε να εγκαταστήσετε ή ανανεώσετε\n\n(Σελίδα %ld από %ld):")
        (set #string_components_help          "Επιλέξτε τα στοιχεία που θέλετε να εγκαταστήσετε.")

        (set #string_components_software      "Εφαρμογή")
        (set #string_components_manuals       "Οδηγίες")
        (set #string_components_catalogs      "Μεταφράσεις")

        (set #string_startup                  "Να γίνουν οι απαραίτητες αλλαγές στο αρχείο S:User-Startup του υπολογιστή σας;")

        (set #string_add_docky                "Η πρόγραμμα εγκατάστασης μπορεί αυτόματα να προσθέσει την εφαρμογή στο AmiDock.\nΠαρόλ' αυτ'α μπορεί μόνο να το εγκαταστήσει στην κύρια μπάρα.\n\nΘέλετε να προσθέσετε την εφαρμογή στο AmiDock;")
    )
)

(if (= @language "italian")
    (
        (set #string_installer                "Il programma di installazione presente nel tuo computer (%ld.%ld) θ troppo vecchio!\n\nQuesto script richiede l'installer versione 43 o superiore. Puoi trovare un installer adatto nel CD del tuo sistema operativo oppure nell'NDK di AmigaOS 3.9. In caso di aggiornamento si consiglia di non conservare la vecchia versione nel proprio sistema. (ad esempio la nuova versione in c: e la vecchia versione in sys:tools)!")

        (set #string_path                     "Scegli un percorso di installazione:")
        (set #string_path_newdir              "Scegli un percorso di installazione. Il programma di setup creerΰ una directory chiamata «%s» nel percorso specificato:")

        (set #string_selectfile               "Seleziona un file:")
        (set #string_selectdirectory          "Seleziona una directory:")

        (set #string_createdirerror           "Impossibile creare la directory:\n%s")

        (set #string_runcommanderror          "AVVISO: \"%s\" ha provocato un codice di errore %ld!\n\nLinea di comando:\n%s")

        (set #string_uninstall_yes            "DISINSTALLA")
        (set #string_uninstall_no             "Tralascia")

        (set #string_again                    "PROVA ANCORA")
        (set #string_skip                     "Tralascia")
        (set #string_ignore                   "Ignora")

        (set #string_success                  "Installazione completata!\n\nIl software θ stato installato correttamente.")
        (set #string_success_verbose          "Installazione completata!\n\nIl software θ stato installato in:\n\"%s\"")

        (set #string_old                      "La versione installata θ troppo vecchia per essere aggiornata. Si prega di disinstallare la vecchia versione e ripetere la procedura di installazione.")

        (set #string_welcome                  "Benvenuti nel programma di installazione di X1kTemp.docky!\n\nQuesto programma installerΰ X1kTemp Docky %s sul tuo computer.")
        (set #string_welcome_install          "INSTALLA")

        (set #string_license                  "LICENZA\nX1kTemp Docky %s ©2013 di Alexandre BALABAN, Tutti i diritti sono riservati.\nQUESTO SOFTWARE E' PROTETTO DALLE NORME NAZIONALI ED INTERNAZIONALI INERENTI AL DIRITTO D'AUTORE. LA RIPRODUZIONE NON AUTORIZZATA, LA CESSIONE ANCHE IN FORMA DI PRESTITO DI UNO O PIU' COMPONENTI DI QUESTO SOFTWARE NON E' PERMESSA E PUO' ESSERE PERSEGUITA A NORMA DI LEGGE. PER ULTERIORI INFORMAZIONI CONSULTATE LA DOCUMENTAZIONE ALLEGATA.")
        (set #string_license_accept           "Accetto i termini del contratto di licenza")

        (set #studio_installerror             "Si θ verificato un errore durante la procedura di installazione. Una descrizione dettagliata dell'errore puς essere trovata nel file t:install.logfile (nel caso la creazione dei file di log sia stata attivata). Il codice di errore θ:\n\n%ld\n\nNel caso il problema persista anche dopo aver ripetuto l'installazione contattatemi al seguente indirizzo di posta elettronica: alexandre@balaban.fr")

        (set #string_os                       "%s non θ compatibile con il sistema operativo installato su questo computer!")
        (set #string_cpu                      "%s non θ compatibile con la CPU disponibile su questo computer!")

        (set #string_components_install       "Seleziona i componenti da installare\n\n(Pagina %ld di %ld):")
        (set #string_components_update        "Seleziona i componenti da installare o aggiornare\n\n(Pagina %ld di %ld):")
        (set #string_components_help          "Selezione dei componenti che si desidera installare.")

        (set #string_components_software      "Software")
        (set #string_components_manuals       "Manuali")
        (set #string_components_catalogs      "Cataloghi")

        (set #string_startup                  "Si desidera apportare le modifiche necessarie al file s:user-startup presente nel tuo computer?")

        (set #string_add_docky                "L'installer θ in grado di aggiungere automaticamente un docky su AmiDock,\ntuttavia potrΰ installarlo solo nel dock principale.\n\nSi desidera aggiungere un docky su AmiDock?")
    )
)


; ///
; /// procedures
; ------------------------------------------------------------------------------

; run command and display error (in case of failure)

(procedure p_runcommand #runcommand_cmd #runcommand_args

    (
        ; make a unique file name

        (set #runcommand_out ("t:%s.run" #short))

        ; execute command (loop until successful)

        (set #runcommand_rc 20)

        (until (= #runcommand_rc 0)

            (
                (delete #runcommand_out)

                (set #runcommand_rc (run ("%s >\"%s\" %s" #runcommand_cmd #runcommand_out #runcommand_args)))

                (if (> #runcommand_rc 5)

                    (
                        ; show error message

                        (if (exists #runcommand_out)

                            (run ("copy \"%s\" con:////Error/AUTO/WAIT/CLOSE" #runcommand_out))
                        )

                        ; try again?

                        (set #runcommand_rc

                            (askbool

                                (prompt (#string_runcommanderror #runcommand_cmd #runcommand_rc (cat #runcommand_cmd " " #runcommand_args)))

                                (help @askbool-help)

                                (choices

                                    #string_again
                                    #string_ignore
                                )

                                (default 0)
                            )
                        )
                    )

                    ; ELSE

                    (set #runcommand_rc 0)
                )
            )
        )

        (delete #runcommand_out)
    )
)

; create directory (any depth, missing dir levels are created)

(procedure p_makedir #makedir_path #makedir_infos

    (
        (if (not (exists #makedir_path))

            (if (<> #makedir_path "")

                (
                    ; try to create dir directly ; if that fails, create missing dir levels

                    (if (= #makedir_infos @true)

                        (makedir #makedir_path (infos))
                        (makedir #makedir_path)
                    )

                    (if (not (exists #makedir_path))

                        (
                            (set #makedir_pos 0)

                            (set #makedir_eol (- (strlen #makedir_path) 1))

                            (while (<= #makedir_pos #makedir_eol)

                                (
                                    (set #makedir_next (substr #makedir_path #makedir_pos 1))

                                    (if (or (= #makedir_next "/") (= #makedir_pos #makedir_eol))

                                        (
                                            (if (= #makedir_next "/")

                                                (set #makedir_next (substr #makedir_path 0 (- #makedir_pos 1)))
                                                (set #makedir_next (substr #makedir_path 0    #makedir_pos   ))
                                            )

                                            (if (= #makedir_infos @true)

                                                (makedir #makedir_next (infos))
                                                (makedir #makedir_next)
                                            )

                                            (if (not (exists #makedir_next))

                                                (abort (#string_createdirerror #makedir_next))
                                            )
                                        )
                                    )

                                    (set #pos (+ #pos 1))
                                )
                            )
                        )
                    )
                )

                ; ELSE

                (abort (#string_createdirerror #makedir_path))
            )
        )
    )
)

; check that required software is installed

(procedure p_versioncheck #versioncheck_file #versioncheck_major #versioncheck_minor

    (if (exists #versioncheck_file (noreq))

        (
            (set #versioncheck_required (+ (* #versioncheck_major 65536) #versioncheck_minor))

            (if (>= (getversion #versioncheck_file) #versioncheck_required)

                (set #result @true )
                (set #result @false)
            )
        )

        ; ELSE

        (set #result @true)
    )
)

; ///
; /// error handler
; ------------------------------------------------------------------------------

(onerror

    (
        (if (> @ioerr 0)

            (message (#studio_installerror @ioerr))
        )

        (exit (quiet))
    )
)

; ///
; /// constants
; ------------------------------------------------------------------------------

; internal use (do not edit)

(set @true                       1)
(set @false                      0)

(set @license_decline            0)
(set @license_accept             1)

(set @variant_max                1)

(set @components_software        1)
(set @components_manuals         2)
(set @components_catalogs        4)

(set @os_1                       1)
(set @os_2                       2)
(set @os_3                       4)
(set @os_4                       8)
(set @os_mos                    16)

(set @cpu_68000                  1)
(set @cpu_68010                  2)
(set @cpu_68020                  4)
(set @cpu_68030                  8)
(set @cpu_68040                 16)
(set @cpu_68060                 32)
(set @cpu_ppc                   64)

; configure

(set #app-version               "53.8")
(set @app-name                  (cat "X1kTemp Docky " @app-version))
(set @name                      (cat "X1kTemp Docky " @app-version))
(set @short                     "X1kTemp.docky")
(set @envs                      "X1kTemp.docky")

(set @querytarget                @true) ; let user choose install path?
(set @variants                   @false) ; let user choose install variant?
(set @components                 @true ) ; let user choose install components?
(set @uninstallable              @false) ; let user uninstall?
(set @envpath                    @false) ; store path in env variable?
(set @envname                    @false) ; store name in env variable?
(set @envserial                  @false) ; store serial in env variable?
(set @require_os                 (+ @os_4))
(set @require_cpu                (+ @cpu_ppc))
(set @components_min             (+ 0))
(set @components_typical         (+ 0))
(set @components_max             (+ @components_software @components_manuals @components_catalogs))
(set @components_custom          (+ 0))
(set @components_firstinstall    (+ 0))

; ///
; /// variables
; ------------------------------------------------------------------------------

(set #variant   @variant_max     )
(set #upgrading @false           )
(set #installed ""               )
(set #target    "SYS:Utilities/Dockies")

; ///
; /// check installer version
; ------------------------------------------------------------------------------

(if (< (/ @installer-version 65536) 43)

    (abort (#string_installer (/ @installer-version 65536) (bitand @installer-version 65535)))
)

; ///
; /// check os version
; ------------------------------------------------------------------------------

; get "os version" (exec version)

(set #version (/ (getversion) 65536))

(if (< #version 36)

    (set #os @os_1)

    (if (< #version 39)

        (set #os @os_2)

        (if (< #version 50)

            (set #os @os_3)

            (if (exists "mossys:" (noreq))

                (set #os @os_mos)
                (set #os @os_4  )
            )
        )
    )
)

; do we have a supported os?

(if (= (bitand @require_os #os) 0)

    (abort (#string_os @name))
)

; ///
; /// check cpu
; ------------------------------------------------------------------------------

; check 68k cpu (or emulation)

(set #cpu (database "cpu"))

(if (= #cpu "68010")

    (set #cpu @cpu_68010)

    (if (= #cpu "68020")

        (set #cpu @cpu_68020)

        (if (= #cpu "68030")

            (set #cpu @cpu_68030)

            (if (= #cpu "68040")

                (set #cpu @cpu_68040)

                (if (= #cpu "68060")

                    (set #cpu @cpu_68060)

                    (set #cpu @cpu_68000)
                )
            )
        )
    )
)

; check ppc cpu

(if (or (= #os @os_4) (= #os @os_mos))

    (set #cpu (bitor #cpu @cpu_ppc))

    ; ELSE

    (if (or (<> (getversion "ppc.library" (resident)) 0) (<> (getversion "powerpc.library" (resident)) 0))

        (set #cpu (bitor #cpu @cpu_ppc))
    )
)

; do we have a supported cpu?

(if (= (bitand @require_cpu #cpu) 0)

    (abort (#string_cpu @name))
)

; ///
; /// find user data
; ------------------------------------------------------------------------------

; ///
; /// welcome
; ------------------------------------------------------------------------------

; check installer version

(if (< (/ @installer-version 65536) 43)

    (abort (#string_installer (/ @installer-version 65536) (bitand @installer-version 65535)))
)

; welcome

(if (or (= #installed "") (= @uninstallable 0))

    (
        (message (#string_welcome #app-version @short @name))

        (set #install @install)
    )

    ; ELSE

    (set #install

        (askbool

            (prompt (#string_welcome #app-version @short @name))

            (help @askbool-help)

            (choices

                #string_welcome_install
                #string_welcome_uninstall
            )

            (default @install)
        )
    )
)

; ///
; /// confirm license
; ------------------------------------------------------------------------------

(if (= #install @install)

    (
        (until (= #accept @license_accept)

            (set #accept

                (askoptions

                    (prompt (#string_license #app-version))

                    (help @askoptions-help)

                    (choices

                        (cat #string_esc #string_license_accept)
                    )

                    (default @license_decline)
                )
            )
        )
    )
)

; ///
; /// installer welcome 
; ------------------------------------------------------------------------------

(if (= #install @install)

    (welcome)
)

; ///
; /// query components
; ------------------------------------------------------------------------------

(set #components

    (askoptions

        (prompt

            (if (= #upgrading @false)

                (#string_components_install 1 1)
                (#string_components_update  1 1)
            )
        )

        (help #string_components_help)

        (choices

            (cat #string_esc #string_components_software     )
            (cat #string_esc #string_components_manuals      )
            (cat #string_esc #string_components_catalogs     )
        )

        (default

            (bitand (select #variant @components_min @components_typical @components_max @components_custom) 255)
        )
    )
)

; ///
; /// save env
; ------------------------------------------------------------------------------

; save env variables?

(if (or @envpath @envname @envserial)

    (
        ; make folders

        (set #prefs1 (tackon "env:"    @envs))
        (set #prefs2 (tackon "envarc:" @envs))

        (if (not (exists #prefs1))

            (makedir #prefs1)
        )

        (if (not (exists #prefs2))

            (makedir #prefs2)
        )

        ; set env variables

        ; copy from env: to envarc:

        (copyfiles

            (source #prefs1)
            (dest   #prefs2)
            (all)
            (optional "nofail" "force" "askuser")
            (nogauge)
        )
    )
)

; ///
; /// install components
; ------------------------------------------------------------------------------

; software

(if (bitand #variant (bitor @variant_max))

    (
        (copyfiles

            (source "X1kTemp.docky")
            (infos)
            (dest #target)
            (nogauge)
            (optional "nofail" "force" "askuser")
        )
        (copyfiles

            (source "X1kTempWarn")
            (infos)
            (dest #target)
            (nogauge)
            (optional "nofail" "force" "askuser")
        )
    )
)

; manuals

(if (bitand #variant (bitor @variant_max))

    (
        (if (or (= @language "french"))

            (copyfiles

                (source "LisezMoi.guide")
                (infos)
                (dest #target)
                (nogauge)
                (optional "nofail" "force" "askuser")
            )

            (if (or (= @language "greek"))

                (copyfiles

                    (source "ReadMe_Gr.guide")
                    (infos)
                    (dest #target)
                    (nogauge)
                    (optional "nofail" "force" "askuser")
                )

                (copyfiles

                    (source "ReadMe.guide")
                    (infos)
                    (dest #target)
                    (nogauge)
                    (optional "nofail" "force" "askuser")
                )
            )
        )
    )
)

; catalogs

(if (bitand #variant (bitor @variant_max))

    (
        (if (or (= @language "french"))

            (copyfiles

                (source "Catalogs/french/X1kTemp.catalog")
                (dest "locale:catalogs/french/")
                (nogauge)
                (optional "nofail" "force" "askuser")
            )
        )
        (if (or (= @language "german"))

            (copyfiles

                (source "Catalogs/german/X1kTemp.catalog")
                (dest "locale:catalogs/german/")
                (nogauge)
                (optional "nofail" "force" "askuser")
            )
        )
        (if (or (= @language "greek"))

            (copyfiles

                (source "Catalogs/greek/X1kTemp.catalog")
                (dest "locale:catalogs/greek/")
                (nogauge)
                (optional "nofail" "force" "askuser")
            )
        )
        (if (or (= @language "italian"))

            (copyfiles

                (source "Catalogs/italian/X1kTemp.catalog")
                (dest "locale:catalogs/italian/")
                (nogauge)
                (optional "nofail" "force" "askuser")
            )
        )
    )
)

; ///
; /// execute arexx
; ------------------------------------------------------------------------------

(rexx "CURRDIR:add_docky.rexx"
    (prompt #string_add_docky)
    (help)
    (confirm "average")
)

; ///
; /// report
; ------------------------------------------------------------------------------

(set @default-dest #target)

(if (<> @createdir "")

    (message (#string_success_verbose #target))
    (message  #string_success)
)

(exit (quiet))

; ///
